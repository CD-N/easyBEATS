#!/bin/bash

# Script variables
BEAT_VERSION="5b046c5"
log=/home/pi/pibeat_log.txt
echo "$(tput setaf 6)---------------------------------------------------------------$(tput sgr0)"
echo "$(tput setaf 6)System Update... $(tput sgr0)" | tee -a $log 
date | tee -a $log
sudo DEBIAN_FRONTEND=noninteractive apt-get -yq update > /dev/null
sudo DEBIAN_FRONTEND=noninteractive apt-get -yq upgrade > /dev/null
echo " ->$(tput setaf 6) System Update Complete$(tput sgr0)" | tee -a $log 
echo "$(tput setaf 6)Creating Go Workspace directories...$(tput sgr0)" | tee -a $log
if [ -d $HOME/go ];
then
   echo " ->$(tput setaf 6) $HOME/go already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making $HOME/go...$(tput sgr0)"  | tee -a $log
   mkdir $HOME/go;  
   mkdir $HOME/go/bin;
   mkdir $HOME/go/pkg;
   mkdir $HOME/go/src;
   mkdir $HOME/go/src/github.com;
   mkdir $HOME/go/src/github.com/elastic;
fi
echo " ->$(tput setaf 6) Go Workspace directories created$(tput sgr0)" | tee -a $log
echo "$(tput setaf 6)Checking for python-pip git...$(tput sgr0)" | tee -a $log
if [ $(dpkg-query -W -f='${Status}' python-pip git 2>/dev/null | grep -c "ok installed") -eq 0 ];
then
  echo " ->$(tput setaf 6) Installing python-pip git...$(tput sgr0)" | tee -a $log
  apt-get install python-pip git -y;
elif [ $(dpkg-query -W -f='${Status}' python-pip git 2>/dev/null | grep -c "ok installed") -eq 1 ];
then  
  echo " ->$(tput setaf 6) python-pip git is installed$(tput sgr0)" | tee -a $log
fi 
echo "$(tput setaf 6)Checking for virtualenv...$(tput sgr0)" | tee -a $log
if python -c 'import pkgutil; exit(not pkgutil.find_loader("virtualenv"))';
then
  echo " ->$(tput setaf 6) virtualenv is installed$(tput sgr0)" | tee -a $log
else
  echo " ->$(tput setaf 6) Installing virtualenv...$(tput sgr0)" | tee -a $log
  pip install virtualenv
fi
echo "$(tput setaf 6)Checking for Make...$(tput sgr0)" | tee -a $log
if [ $(dpkg-query -W -f='${Status}' make 2>/dev/null | grep -c "ok installed") -eq 0 ];
then
  echo " ->$(tput setaf 6) Installing make...$(tput sgr0)" | tee -a $log
  apt-get install make -y;
elif [ $(dpkg-query -W -f='${Status}' make 2>/dev/null | grep -c "ok installed") -eq 1 ];
then  
  echo " ->$(tput setaf 6) Make is installed$(tput sgr0)" | tee -a $log
fi 
echo "$(tput setaf 6)Checking for GCC...$(tput sgr0)" | tee -a $log
if [ $(dpkg-query -W -f='${Status}' gcc 2>/dev/null | grep -c "ok installed") -eq 0 ];
then
  echo " ->$(tput setaf 6) Installing GCC...$(tput sgr0)" | tee -a $log
  apt-get install build-essential manpages-dev -y;
elif [ $(dpkg-query -W -f='${Status}' gcc 2>/dev/null | grep -c "ok installed") -eq 1 ];
then  
  echo " ->$(tput setaf 6) GCC is installed$(tput sgr0)" | tee -a $log
fi 
echo "$(tput setaf 6)Checking for Go...$(tput sgr0)" | tee -a $log
if [ $(dpkg-query -W -f='${Status}' golang-go 2>/dev/null | grep -c "ok installed") -eq 0 ];
then
  echo " ->$(tput setaf 6) Installing Go...$(tput sgr0)" | tee -a $log
  sudo apt-get install golang-go -y;
  go version  | tee -a $log
  echo " ->$(tput setaf 6) Go is installed$(tput sgr0)"
elif [ $(dpkg-query -W -f='${Status}' golang-go 2>/dev/null | grep -c "ok installed") -eq 1 ];
then  
  echo " ->$(tput setaf 6) Go is installed$(tput sgr0)" | tee -a $log
fi
echo "$(tput setaf 6)Getting Beats files from Elastic repo on github...$(tput sgr0)" | tee -a $log
cd $HOME/go/src/github.com/elastic
go get github.com/elastic/beats | tee -a $log 
cd beats
echo "$(tput setaf 6)Checking out Beats...$(tput sgr0)" | tee -a $log
git fetch
git checkout $BEAT_VERSION | tee -a $log
echo "$(tput setaf 6)Temporarily enabling swap space$(tput sgr0)" | tee -a $log
sudo fallocate -l 2G /swapfile
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile
echo -e "/swapfile swap swap defaults 0 0" | sudo tee -a /etc/fstab
sudo swapon --show
echo "$(tput setaf 6)---- Filebeat ----$(tput sgr0)"
cd $HOME/go/src/github.com/elastic/beats/filebeat
if [ $(lscpu | grep -c "armv7") -eq 1 ];
then
  echo "$(tput setaf 6)Creating Filebeat...$(tput sgr0)"  | tee -a $log
  GOOS=linux GOARCH=arm go get;
  make;
  echo "$(tput setaf 6)Filebeat created$(tput sgr0)"  | tee -a $log
elif [ $(lscpu | grep -c "armv8") -eq 1 ];
then 
  echo "$(tput setaf 6)Creating Filebeat...$(tput sgr0)"  | tee -a $log
  GOOS=linux GOARCH=arm64 go get;
  make;
  echo "$(tput setaf 6)Filebeat created$(tput sgr0)"  | tee -a $log
fi
echo "$(tput setaf 6)Creating Filebeat directories...$(tput sgr0)" | tee -a $log
if [ -d /usr/share/filebeat ];
then
   echo " ->$(tput setaf 6) /usr/share/filebeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /usr/share/filebeat...$(tput sgr0)" | tee -a $log
   sudo mkdir /usr/share/filebeat;
   sudo mkdir /usr/share/filebeat/bin;
fi
if [ -d /etc/filebeat ];
then
   echo " ->$(tput setaf 6) /etc/filebeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /etc/filebeat...$(tput sgr0)" | tee -a $log
   sudo mkdir /etc/filebeat;
fi
if [ -d /var/log/filebeat ];
then
   echo " ->$(tput setaf 6) /var/log/filebeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /var/log/filebeat...$(tput sgr0)"  | tee -a $log
   sudo mkdir /var/log/filebeat;
fi
if [ -d /var/lib/filebeat ];
then
   echo " ->$(tput setaf 6) /var/lib/filebeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /var/lib/filebeat...$(tput sgr0)"  | tee -a $log
   sudo mkdir /var/lib/filebeat
fi
echo "$(tput setaf 6)Moving Filebeat...$(tput sgr0)" | tee -a $log
sudo mv $HOME/go/src/github.com/elastic/beats/filebeat/filebeat /usr/share/filebeat/bin
sudo mv $HOME/go/src/github.com/elastic/beats/filebeat/module /usr/share/filebeat
sudo cp $HOME/go/src/github.com/elastic/beats/filebeat/filebeat.reference.yml /etc/filebeat
sudo mv $HOME/go/src/github.com/elastic/beats/filebeat/modules.d/ /etc/filebeat/
sudo cp $HOME/go/src/github.com/elastic/beats/filebeat/filebeat.yml /etc/filebeat
sudo cp $HOME/beats_arm/filebeat_files/fields.yml /etc/filebeat
sudo cp $HOME/beats_arm/filebeat_files/LICENSE.txt /usr/share/filebeat
sudo cp $HOME/beats_arm/filebeat_files/NOTICE.txt /usr/share/filebeat
sudo cp $HOME/beats_arm/filebeat_files/filebeat.service /lib/systemd/system
sudo chmod 700 /var/log/filebeat
sudo chmod 755 /etc/filebeat/
sudo chown -R root:root /etc/filebeat
sudo chown -R root:root /usr/share/filebeat/*
sudo /bin/systemctl daemon-reload
sudo systemctl enable filebeat
echo "$(tput setaf 6)---- Metricbeat ----$(tput sgr0)"
cd $HOME/go/src/github.com/elastic/beats/metricbeat
if [ $(lscpu | grep -c "armv7") -eq 1 ];
then
  echo "$(tput setaf 6)Creating Metricbeat...$(tput sgr0)"  | tee -a $log
  GOOS=linux GOARCH=arm go get;
  make;
  echo "$(tput setaf 6)Metricbeat created$(tput sgr0)"  | tee -a $log
elif [ $(lscpu | grep -c "armv8") -eq 1 ];
then 
  echo "$(tput setaf 6)Creating Metricbeat...$(tput sgr0)"  | tee -a $log
  GOOS=linux GOARCH=arm64 go get;
  make;
  echo "$(tput setaf 6)Metricbeat created$(tput sgr0)"  | tee -a $log
fi
echo "$(tput setaf 6)Creating Metricbeat directories...$(tput sgr0)" | tee -a $log
if [ -d /usr/share/metricbeat ];
then
   echo " ->$(tput setaf 6) /usr/share/metricbeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /usr/share/metricbeat...$(tput sgr0)" | tee -a $log
   sudo mkdir /usr/share/metricbeat;
   sudo mkdir /usr/share/metricbeat/bin;
fi
if [ -d /etc/metricbeat ];
then
   echo " ->$(tput setaf 6) /etc/metricbeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /etc/metricbeat...$(tput sgr0)" | tee -a $log
   sudo mkdir /etc/metricbeat;
fi
if [ -d /var/log/metricbeat ];
then
   echo " ->$(tput setaf 6) /var/log/metricbeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /var/log/metricbeat...$(tput sgr0)"  | tee -a $log
   sudo mkdir /var/log/metricbeat;
fi
if [ -d /var/lib/metricbeat ];
then
   echo " ->$(tput setaf 6) /var/lib/metricbeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /var/lib/metricbeat...$(tput sgr0)"  | tee -a $log
   sudo mkdir /var/lib/metricbeat
fi
sudo mv $HOME/go/src/github.com/elastic/beats/metricbeat/metricbeat /usr/share/metricbeat/bin
sudo mv $HOME/go/src/github.com/elastic/beats/metricbeat/module /usr/share/metricbeat
sudo mv $HOME/go/src/github.com/elastic/beats/metricbeat/modules.d/ /etc/metricbeat/
sudo cp $HOME/go/src/github.com/elastic/beats/metricbeat/metricbeat.yml /etc/metricbeat
sudo cp $HOME/go/src/github.com/elastic/beats/metricbeat/metricbeat.reference.yml /etc/metricbeat
sudo cp $HOME/beats_arm/metricbeat_files/fields.yml /etc/metricbeat
sudo cp $HOME/beats_arm/metricbeat_files/LICENSE.txt /usr/share/metricbeat
sudo cp $HOME/beats_arm/metricbeat_files/NOTICE.txt /usr/share/metricbeat
sudo cp $HOME/beats_arm/metricbeat_files/metricbeat.service /lib/systemd/system
sudo chmod 700 /var/log/metricbeat
sudo chmod 755 /etc/metricbeat/
sudo chown -R root:root /etc/metricbeat
sudo chown -R root:root /usr/share/metricbeat/*
sudo /bin/systemctl daemon-reload
sudo systemctl enable metricbeat
echo "$(tput setaf 6)---- Packetbeat ----$(tput sgr0)"
sudo apt install libpcap-dev -y
cd $HOME/go/src/github.com/elastic/beats/packetbeat
if [ $(lscpu | grep -c "armv7") -eq 1 ];
then
  echo "$(tput setaf 6)Creating Packetbeat...$(tput sgr0)"  | tee -a $log
  GOOS=linux GOARCH=arm go get;
  make;
  echo "$(tput setaf 6)Packetbeat created$(tput sgr0)"  | tee -a $log
elif [ $(lscpu | grep -c "armv8") -eq 1 ];
then 
  echo "$(tput setaf 6)Creating Packetbeat...$(tput sgr0)"  | tee -a $log
  GOOS=linux GOARCH=arm64 go get;
  make;
  echo "$(tput setaf 6)Packetbeat created$(tput sgr0)"  | tee -a $log
fi
echo "$(tput setaf 6)Creating Packetbeat directories...$(tput sgr0)" | tee -a $log
if [ -d /usr/share/packetbeat ];
then
   echo " ->$(tput setaf 6) /usr/share/packetbeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /usr/share/packetbeat...$(tput sgr0)" | tee -a $log
   sudo mkdir /usr/share/packetbeat;
   sudo mkdir /usr/share/packetbeat/bin;
fi
if [ -d /etc/packetbeat ];
then
   echo " ->$(tput setaf 6) /etc/packetbeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /etc/packetbeat...$(tput sgr0)" | tee -a $log
   sudo mkdir /etc/packetbeat;
fi
if [ -d /var/log/packetbeat ];
then
   echo " ->$(tput setaf 6) /var/log/packetbeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /var/log/packetbeat...$(tput sgr0)"  | tee -a $log
   sudo mkdir /var/log/packetbeat;
fi
if [ -d /var/lib/packetbeat ];
then
   echo " ->$(tput setaf 6) /var/lib/packetbeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /var/lib/packetbeat...$(tput sgr0)"  | tee -a $log
   sudo mkdir /var/lib/packetbeat
fi
sudo mv $HOME/go/src/github.com/elastic/beats/packetbeat/packetbeat /usr/share/packetbeat/bin
sudo cp -r $HOME/go/src/github.com/elastic/beats/packetbeat/_meta/kibana /usr/share/packetbeat
sudo cp $HOME/go/src/github.com/elastic/beats/packetbeat/packetbeat.reference.yml /etc/packetbeat
sudo cp $HOME/go/src/github.com/elastic/beats/packetbeat/packetbeat.yml /etc/packetbeat
sudo cp $HOME/beats_arm/packetbeat_files/fields.yml /etc/packetbeat
sudo cp $HOME/beats_arm/packetbeat_files/LICENSE.txt /usr/share/packetbeat
sudo cp $HOME/beats_arm/packetbeat_files/NOTICE.txt /usr/share/packetbeat
sudo cp $HOME/beats_arm/packetbeat_files/packetbeat.service /lib/systemd/system
sudo chmod 700 /var/log/packetbeat
sudo chmod 755 /etc/packetbeat/
sudo chown -R root:root /usr/share/packetbeat/*
sudo chown -R root:root /etc/packetbeat
sudo /bin/systemctl daemon-reload
sudo systemctl enable packetbeat
echo "$(tput setaf 6)---- Auditbeat ----$(tput sgr0)"
cd $HOME/go/src/github.com/elastic/beats/auditbeat
if [ $(lscpu | grep -c "armv7") -eq 1 ];
then
  echo "$(tput setaf 6)Creating Auditbeat...$(tput sgr0)"  | tee -a $log
  GOOS=linux GOARCH=arm go get;
  make;
  echo "$(tput setaf 6)Auditbeat created$(tput sgr0)"  | tee -a $log
elif [ $(lscpu | grep -c "armv8") -eq 1 ];
then 
  echo "$(tput setaf 6)Creating Auditbeat...$(tput sgr0)"  | tee -a $log
  GOOS=linux GOARCH=arm64 go get;
  make;
  echo "$(tput setaf 6)Auditbeat created$(tput sgr0)"  | tee -a $log
fi
echo "$(tput setaf 6)Creating Auditbeat directories...$(tput sgr0)" | tee -a $log
if [ -d /usr/share/auditbeat ];
then
   echo " ->$(tput setaf 6) /usr/share/auditbeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /usr/share/auditbeat...$(tput sgr0)" | tee -a $log
   sudo mkdir /usr/share/auditbeat;
   sudo mkdir /usr/share/auditbeat/bin;
fi
if [ -d /etc/auditbeat ];
then
   echo " ->$(tput setaf 6) /etc/auditbeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /etc/auditbeat...$(tput sgr0)" | tee -a $log
   sudo mkdir /etc/auditbeat;
fi
if [ -d /var/log/auditbeat ];
then
   echo " ->$(tput setaf 6) /var/log/auditbeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /var/log/auditbeat...$(tput sgr0)"  | tee -a $log
   sudo mkdir /var/log/auditbeat;
fi
if [ -d /var/lib/auditbeat ];
then
   echo " ->$(tput setaf 6) /var/lib/auditbeat already exists$(tput sgr0)" | tee -a $log
else
   echo " ->$(tput setaf 6) making /var/lib/auditbeat...$(tput sgr0)"  | tee -a $log
   sudo mkdir /var/lib/auditbeat
fi
sudo mv $HOME/go/src/github.com/elastic/beats/auditbeat/auditbeat /usr/share/auditbeat/bin
sudo mv $HOME/go/src/github.com/elastic/beats/auditbeat/module /usr/share/auditbeat
sudo cp $HOME/go/src/github.com/elastic/beats/auditbeat/auditbeat.yml /etc/auditbeat
sudo cp $HOME/go/src/github.com/elastic/beats/auditbeat/auditbeat.reference.yml /etc/auditbeat
sudo cp -r $HOME/beats_arm/auditbeat_files/audit.rules.d /etc/auditbeat
sudo cp $HOME/beats_arm/auditbeat_files/fields.yml /etc/auditbeat
sudo cp $HOME/beats_arm/auditbeat_files/LICENSE.txt /usr/share/auditbeat
sudo cp $HOME/beats_arm/auditbeat_files/NOTICE.txt /usr/share/auditbeat
sudo cp $HOME/beats_arm/auditbeat_files/auditbeat.service /lib/systemd/system
sudo chmod 700 /var/log/auditbeat
sudo chmod 755 /etc/auditbeat/
sudo chown -R root:root /usr/share/auditbeat/*
sudo chown -R root:root /etc/auditbeat
sudo /bin/systemctl daemon-reload
sudo systemctl enable auditbeat
sudo swapoff -v /swapfile
sudo rm /swapfile
echo "$(tput setaf 6)Temporarily swap space disabled$(tput sgr0)" | tee -a $log
rm -rf $HOME/go
echo "$(tput setaf 6)Finished$(tput sgr0)" | tee -a $log
echo "$(tput setaf 6)---------------------------------------------------------------$(tput sgr0)"